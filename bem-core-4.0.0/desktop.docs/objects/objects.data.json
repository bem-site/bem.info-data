{"uk":{"name":"objects","examples":[],"description":""},"ru":{"name":"objects","examples":[],"description":"<h1 class=\"article__heading article__heading_1\" id=\"objects\"><a href=\"#objects\" class=\"article__heading-anchor\"></a>objects</h1><p>Блок предоставляет объект, содержащий набор методов для работы с объектами JavaScript.</p>\n<h2 class=\"article__heading article__heading_2\" id=\"Обзор-7\"><a href=\"#Обзор-7\" class=\"article__heading-anchor\"></a>Обзор</h2><h3 class=\"article__heading article__heading_3\" id=\"Свойства-и-методы-объекта-9\"><a href=\"#Свойства-и-методы-объекта-9\" class=\"article__heading-anchor\"></a>Свойства и методы объекта</h3><table>\n<thead>\n<tr>\n<th>Имя</th>\n<th>Возвращаемое значение</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#fields-extend\">extend</a>(<br><code>{Object} target</code>, <br><code>{Object} source</code></code>)</td>\n<td><code>{Object}</code></td>\n<td>Расширяет объект свойствами другого объекта.</td>\n</tr>\n<tr>\n<td><a href=\"#fields-isEmpty\">isEmpty</a>(<code>{Object} obj</code>)</td>\n<td><code>{Boolean}</code></td>\n<td>Позволяет выяснить пуст ли переданный объект.</td>\n</tr>\n<tr>\n<td><a href=\"#fields-each\">each</a>(<br><code>{Object} obj</code>, <br><code>{Function} fn</code>, <br><code>[{Object} ctx]</code>)</td>\n<td>-</td>\n<td>Итеративно обходит собственные свойства объекта.</td>\n</tr>\n</tbody>\n</table>\n<h3 class=\"article__heading article__heading_3\" id=\"Публичные-технологии-блока-10\"><a href=\"#Публичные-технологии-блока-10\" class=\"article__heading-anchor\"></a>Публичные технологии блока</h3><p>Блок реализован в технологиях:</p>\n<ul>\n<li><code>vanilla.js</code></li>\n</ul>\n<h2 class=\"article__heading article__heading_2\" id=\"Подробности-4\"><a href=\"#Подробности-4\" class=\"article__heading-anchor\"></a>Подробности</h2><p><a name=\"fields\"></a></p>\n<h3 class=\"article__heading article__heading_3\" id=\"Свойства-и-методы-объекта-10\"><a href=\"#Свойства-и-методы-объекта-10\" class=\"article__heading-anchor\"></a>Свойства и методы объекта</h3><p><a name=\"fields-extend\"></a></p>\n<h4 class=\"article__heading article__heading_4\" id=\"Метод-codeextendcode\"><a href=\"#Метод-codeextendcode\" class=\"article__heading-anchor\"></a>Метод <code>extend</code></h4><p>Расширяет объект свойствами другого объекта. Копируются только собственные свойства, не полученные по цепочке прототипов.</p>\n<p>Принимаемые аргументы: </p>\n<ul>\n<li><code>target</code> <code>{Object}</code> – целевой объект. Обязательный аргумент.</li>\n<li><code>source</code> <code>{Object}</code> – объект, свойства которого добавляются к целевому. Может быть передано несколько объектов. Свойства каждого из них будут добавлены к целевому. Обязательный аргумент.</li>\n</ul>\n<p>Возвращаемое значение: <code>{Object}</code>. Целевой объект с добавленными свойствами.</p>\n<pre><code class=\"lang-js\">modules.require([<span class=\"hljs-string\">'objects'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">objects</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> obj1 = { <span class=\"hljs-attr\">a</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span> : <span class=\"hljs-number\">2</span> },\n        obj2 = { <span class=\"hljs-attr\">b</span> : <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">c</span> : <span class=\"hljs-number\">4</span> };\n\n    <span class=\"hljs-built_in\">console</span>.log(objects.extend(obj1, obj2)); <span class=\"hljs-comment\">// { a : 1, b : 3, c : 4 }</span>\n});\n</code></pre>\n<p><a name=\"fields-isEmpty\"></a></p>\n<h4 class=\"article__heading article__heading_4\" id=\"Метод-codeisemptycode\"><a href=\"#Метод-codeisemptycode\" class=\"article__heading-anchor\"></a>Метод <code>isEmpty</code></h4><p>Позволяет выяснить пуст ли переданный объект. Другими словами, имеет ли объект собственные свойства.</p>\n<p>Принимаемые аргументы: </p>\n<ul>\n<li><code>obj</code> <code>{Object}</code> – объект для проверки. Обязательный аргумент.</li>\n</ul>\n<p>Возвращаемое значение: <code>{Boolean}</code>. В случае, если объект не имеет собственных свойств – <code>true</code>.</p>\n<pre><code class=\"lang-js\">modules.require([<span class=\"hljs-string\">'objects'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">objects</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> obj1 = {},\n        obj2 = { <span class=\"hljs-attr\">foo</span> : <span class=\"hljs-string\">'bar'</span> };\n\n    <span class=\"hljs-built_in\">console</span>.log(objects.isEmpty(obj1)); <span class=\"hljs-comment\">// true</span>\n    <span class=\"hljs-built_in\">console</span>.log(objects.isEmpty(obj2)); <span class=\"hljs-comment\">// false</span>\n});\n</code></pre>\n<p><a name=\"fields-each\"></a></p>\n<h4 class=\"article__heading article__heading_4\" id=\"Метод-codeeachcode\"><a href=\"#Метод-codeeachcode\" class=\"article__heading-anchor\"></a>Метод <code>each</code></h4><p>Служит для итерации по собственным свойствам объекта. Для каждого собственного свойства вызывается функция-обработчик. </p>\n<p>Принимаемые аргументы:</p>\n<ul>\n<li><code>obj</code> <code>{Object}</code> – объект, обход свойств которого производится. Обязательный аргумент.</li>\n<li><code>fn</code> <code>{Function}</code> – функция-обработчик, вызываемая для каждого свойства. Обязательный аргумент.</li>\n<li>[<code>ctx</code> <code>{Object}</code>] – контекст обработчика.</li>\n</ul>\n<p>Не имеет возвращаемого значения. </p>\n<p>Функция-обработчик получает в качестве аргументов значение и ключ свойства объекта, для которого была вызвана.</p>\n<pre><code class=\"lang-js\">modules.require([<span class=\"hljs-string\">'objects'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">objects</span>) </span>{\n    objects.each(\n        { <span class=\"hljs-attr\">a</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span> : <span class=\"hljs-number\">2</span> },\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">val, key</span>) </span>{\n            <span class=\"hljs-built_in\">console</span>.log(key, val);\n        });\n    <span class=\"hljs-comment\">// a 1</span>\n    <span class=\"hljs-comment\">// b 2</span>\n});\n</code></pre>\n"},"en":{"name":"objects","examples":[],"description":""}}