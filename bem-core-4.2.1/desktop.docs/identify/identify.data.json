{"uk":{"name":"identify","examples":[],"description":"","bemjsonDescription":""},"ru":{"name":"identify","examples":[],"description":"<h1 id=\"identify\"><a href=\"#identify\" class=\"anchor\"></a>identify</h1>\n<p>Блок предоставляет функцию для работы с уникальными идентификаторами, которая позволяет:</p>\n<ul>\n<li>создавать идентификаторы объектов;</li>\n<li>проверять у объектов наличие идентификатора;</li>\n<li>создавать уникальную строку-идентификатор.</li>\n</ul>\n<p><strong>Принимаемые аргументы:</strong></p>\n<ul>\n<li>[<code>obj {Object}</code>] – идентифицируемый объект.</li>\n<li>[<code>onlyGet {Boolean}</code>] – флаг для проверки наличия у объекта идентификатора. Если <code>true</code>, функция будет возвращать строку с идентификатором только если объект был заранее идентифицирован. По умолчанию <code>false</code>.</li>\n</ul>\n<p><strong>Возвращаемое значение:</strong> <code>String</code>. Строка с идентификатором, присвоенным объекту. При последующих вызовах всегда будет возвращаться один и тот же идентификатор.</p>\n<p>Пример:</p>\n<pre><code class=\"lang-js\">modules.require([&#39;identify&#39;], function(identify) {\n    var a = {},\n        b = {},\n        identA = identify(a);\n\n    console.log(identA === identify(a)); // true\n    console.log(identA === identify(b)); // false\n});\n</code></pre>\n<p>При вызове без аргументов, функция будет каждый раз возвращать строку с уникальным идентификатором.</p>\n<p>Пример:</p>\n<pre><code class=\"lang-js\">modules.require([&#39;identify&#39;], function(identify) {\n    var a = identify(),\n        b = identify();\n\n    console.log(a === b); // false\n});\n</code></pre>\n<h2 id=\"Публичные-технологии-блока-5\"><a href=\"#Публичные-технологии-блока-5\" class=\"anchor\"></a>Публичные технологии блока</h2>\n<p>Блок реализован в технологиях:</p>\n<ul>\n<li><code>vanilla.js</code></li>\n</ul>\n","bemjsonDescription":"{\n    \"block\": \"md-root\",\n    \"content\": [\n        {\n            \"level\": 1,\n            \"block\": \"heading\",\n            \"mods\": {\n                \"level\": 1\n            },\n            \"content\": \"identify\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"Блок предоставляет функцию для работы с уникальными идентификаторами, которая позволяет:\"\n        },\n        {\n            \"ordered\": false,\n            \"loose\": false,\n            \"block\": \"list\",\n            \"content\": [\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \"создавать идентификаторы объектов;\"\n                    }\n                },\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \"проверять у объектов наличие идентификатора;\"\n                    }\n                },\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \"создавать уникальную строку-идентификатор.\"\n                    }\n                }\n            ]\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": {\n                \"block\": \"strong\",\n                \"content\": \"Принимаемые аргументы:\"\n            }\n        },\n        {\n            \"ordered\": false,\n            \"loose\": false,\n            \"block\": \"list\",\n            \"content\": [\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \" – идентифицируемый объект.\"\n                    }\n                },\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": [\n                            \" – флаг для проверки наличия у объекта идентификатора. Если \",\n                            {\n                                \"block\": \"inline-code\",\n                                \"content\": \"true\"\n                            },\n                            \", функция будет возвращать строку с идентификатором только если объект был заранее идентифицирован. По умолчанию \",\n                            {\n                                \"block\": \"inline-code\",\n                                \"content\": \"false\"\n                            },\n                            \".\"\n                        ]\n                    }\n                }\n            ]\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": [\n                {\n                    \"block\": \"strong\",\n                    \"content\": \"Возвращаемое значение:\"\n                },\n                \" \",\n                {\n                    \"block\": \"inline-code\",\n                    \"content\": \"String\"\n                },\n                \". Строка с идентификатором, присвоенным объекту. При последующих вызовах всегда будет возвращаться один и тот же идентификатор.\"\n            ]\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"Пример:\"\n        },\n        {\n            \"lang\": \"js\",\n            \"block\": \"code\",\n            \"content\": \"modules.require(['identify'], function(identify) {\\n    var a = {},\\n        b = {},\\n        identA = identify(a);\\n\\n    console.log(identA === identify(a)); // true\\n    console.log(identA === identify(b)); // false\\n});\\n\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"При вызове без аргументов, функция будет каждый раз возвращать строку с уникальным идентификатором.\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"Пример:\"\n        },\n        {\n            \"lang\": \"js\",\n            \"block\": \"code\",\n            \"content\": \"modules.require(['identify'], function(identify) {\\n    var a = identify(),\\n        b = identify();\\n\\n    console.log(a === b); // false\\n});\\n\"\n        },\n        {\n            \"level\": 2,\n            \"block\": \"heading\",\n            \"mods\": {\n                \"level\": 2\n            },\n            \"content\": \"Публичные технологии блока\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"Блок реализован в технологиях:\"\n        },\n        {\n            \"ordered\": false,\n            \"loose\": false,\n            \"block\": \"list\",\n            \"content\": {\n                \"loose\": false,\n                \"checked\": null,\n                \"block\": \"list-item\",\n                \"content\": {\n                    \"block\": \"paragraph\",\n                    \"content\": {\n                        \"block\": \"inline-code\",\n                        \"content\": \"vanilla.js\"\n                    }\n                }\n            }\n        }\n    ]\n}"},"en":{"name":"identify","examples":[],"description":"<h1 id=\"identify-1\"><a href=\"#identify-1\" class=\"anchor\"></a>identify</h1>\n<p>This block provides a function for working with unique identifiers. It allows you to:</p>\n<ul>\n<li>Create object identifiers.</li>\n<li>Check whether objects have an identifier.</li>\n<li>Create a unique identifier string.</li>\n</ul>\n<p><strong>Accepted arguments:</strong></p>\n<ul>\n<li>[<code>obj {Object}</code>] – The object to identify.</li>\n<li>[<code>onlyGet {Boolean}</code>] – Flag for checking whether the object has an identifier. If <code>true</code>, the function returns a string with the identifier if the object was previously assigned an identifier. By default, <code>false</code>.</li>\n</ul>\n<p><strong>Return value:</strong> <code>String</code>. A string with the identifier assigned to the object. Subsequent calls will always return the same identifier.</p>\n<p>Example:</p>\n<pre><code class=\"lang-js\">modules.require([&#39;identify&#39;], function(identify) {\n    var a = {},\n        b = {},\n        identA = identify(a);\n\n    console.log(identA === identify(a)); //true\n    console.log(identA === identify(b)); //false\n});\n</code></pre>\n<p>When called without arguments, the function returns a string with a unique identifier every time.</p>\n<p>Example:</p>\n<pre><code class=\"lang-js\">modules.require([&#39;identify&#39;], function(identify) {\n    var a = identify(),\n        b = identify();\n\n    console.log(a === b); //false\n});\n</code></pre>\n<h2 id=\"public-block-technologies-5\"><a href=\"#public-block-technologies-5\" class=\"anchor\"></a>Public block technologies</h2>\n<p>The block is implemented in:</p>\n<ul>\n<li><code>vanilla.js</code></li>\n</ul>\n","bemjsonDescription":"{\n    \"block\": \"md-root\",\n    \"content\": [\n        {\n            \"level\": 1,\n            \"block\": \"heading\",\n            \"mods\": {\n                \"level\": 1\n            },\n            \"content\": \"identify\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"This block provides a function for working with unique identifiers. It allows you to:\"\n        },\n        {\n            \"ordered\": false,\n            \"loose\": false,\n            \"block\": \"list\",\n            \"content\": [\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \"Create object identifiers.\"\n                    }\n                },\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \"Check whether objects have an identifier.\"\n                    }\n                },\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \"Create a unique identifier string.\"\n                    }\n                }\n            ]\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": {\n                \"block\": \"strong\",\n                \"content\": \"Accepted arguments:\"\n            }\n        },\n        {\n            \"ordered\": false,\n            \"loose\": false,\n            \"block\": \"list\",\n            \"content\": [\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": \" – The object to identify.\"\n                    }\n                },\n                {\n                    \"loose\": false,\n                    \"checked\": null,\n                    \"block\": \"list-item\",\n                    \"content\": {\n                        \"block\": \"paragraph\",\n                        \"content\": [\n                            \" – Flag for checking whether the object has an identifier. If \",\n                            {\n                                \"block\": \"inline-code\",\n                                \"content\": \"true\"\n                            },\n                            \", the function returns a string with the identifier if the object was previously assigned an identifier. By default, \",\n                            {\n                                \"block\": \"inline-code\",\n                                \"content\": \"false\"\n                            },\n                            \".\"\n                        ]\n                    }\n                }\n            ]\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": [\n                {\n                    \"block\": \"strong\",\n                    \"content\": \"Return value:\"\n                },\n                \" \",\n                {\n                    \"block\": \"inline-code\",\n                    \"content\": \"String\"\n                },\n                \". A string with the identifier assigned to the object. Subsequent calls will always return the same identifier.\"\n            ]\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"Example:\"\n        },\n        {\n            \"lang\": \"js\",\n            \"block\": \"code\",\n            \"content\": \"modules.require(['identify'], function(identify) {\\n    var a = {},\\n        b = {},\\n        identA = identify(a);\\n\\n    console.log(identA === identify(a)); //true\\n    console.log(identA === identify(b)); //false\\n});\\n\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"When called without arguments, the function returns a string with a unique identifier every time.\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"Example:\"\n        },\n        {\n            \"lang\": \"js\",\n            \"block\": \"code\",\n            \"content\": \"modules.require(['identify'], function(identify) {\\n    var a = identify(),\\n        b = identify();\\n\\n    console.log(a === b); //false\\n});\\n\"\n        },\n        {\n            \"level\": 2,\n            \"block\": \"heading\",\n            \"mods\": {\n                \"level\": 2\n            },\n            \"content\": \"Public block technologies\"\n        },\n        {\n            \"block\": \"paragraph\",\n            \"content\": \"The block is implemented in:\"\n        },\n        {\n            \"ordered\": false,\n            \"loose\": false,\n            \"block\": \"list\",\n            \"content\": {\n                \"loose\": false,\n                \"checked\": null,\n                \"block\": \"list-item\",\n                \"content\": {\n                    \"block\": \"paragraph\",\n                    \"content\": {\n                        \"block\": \"inline-code\",\n                        \"content\": \"vanilla.js\"\n                    }\n                }\n            }\n        }\n    ]\n}"}}