{"uk":{"name":"cookie","examples":[],"description":""},"ru":{"name":"cookie","examples":[],"description":"<h1 id=\"cookie\"><a href=\"#cookie\" class=\"anchor\"></a>cookie</h1>\n<p>Блок предоставляет объект, содержащий набор методов для работы с cookie браузера (JS-свойство <code>document.cookie</code>).</p>\n<h2 id=\"Обзор\"><a href=\"#Обзор\" class=\"anchor\"></a>Обзор</h2>\n<h3 id=\"Свойства-и-методы-объекта\"><a href=\"#Свойства-и-методы-объекта\" class=\"anchor\"></a>Свойства и методы объекта</h3>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>Имя</th>\n<th>Тип возвращаемого значения</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#fields-get\">get</a>(<code>name</code>)</td>\n<td><code>String</code> &#124; <code>null</code></td>\n<td>Служит для получения значения, хранящегося в cookie браузера.</td>\n</tr>\n<tr>\n<td><a href=\"#fields-set\">set</a>(<code>name</code>, <code>val</code>, <code>[options]</code>)</td>\n<td><code>String</code></td>\n<td>Cлужит для записи cookie с заданным именем.</td>\n</tr>\n</tbody>\n</table>\n</div><h3 id=\"Публичные-технологии-блока-1\"><a href=\"#Публичные-технологии-блока-1\" class=\"anchor\"></a>Публичные технологии блока</h3>\n<p>Блок реализован в технологиях:</p>\n<ul>\n<li><code>js</code></li>\n</ul>\n<h2 id=\"Описание\"><a href=\"#Описание\" class=\"anchor\"></a>Описание</h2>\n<p><a name=\"fields\"></a></p>\n<h3 id=\"Свойства-и-методы-объекта-1\"><a href=\"#Свойства-и-методы-объекта-1\" class=\"anchor\"></a>Свойства и методы объекта</h3>\n<p><a name=\"fields-get\"></a></p>\n<h4 id=\"Метод-get\"><a href=\"#Метод-get\" class=\"anchor\"></a>Метод <code>get</code></h4>\n<p>Метод служит для получения значения, хранящегося в cookie, для имени переданного аргументом.</p>\n<p><strong>Принимаемые аргументы:</strong></p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Тип</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code>&#42;</td>\n<td><code>String</code></td>\n<td>Имя cookie.</td>\n</tr>\n</tbody>\n</table>\n</div><p>&#42; Обязательный аргумент.</p>\n<p><strong>Возвращает:</strong></p>\n<ul>\n<li><code>String</code> — если cookie с заданным именем было установлено. Значение автоматически декодируется с помощью <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent</a>.</li>\n<li><code>null</code> — если cookie с заданным именем отсутствует.</li>\n</ul>\n<p>Пример:</p>\n<pre><code class=\"lang-js\">modules.require(&#39;cookie&#39;, function(cookie) {\n\n    cookie.set(&#39;mycookie&#39;, &#39;foobar&#39;);\n    console.log(cookie.get(&#39;mycookie&#39;)); // &#39;foobar&#39;\n    console.log(cookie.get(&#39;foo&#39;)); // null\n\n});\n</code></pre>\n<p><a name=\"fields-set\"></a></p>\n<h4 id=\"Метод-set\"><a href=\"#Метод-set\" class=\"anchor\"></a>Метод <code>set</code></h4>\n<p>Метод служит для записи cookie с заданным именем. Помимо имени и значения, методу можно передать хеш с дополнительными параметрами cookie.</p>\n<p><strong>Принимаемые аргументы:</strong></p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>Аргумент</th>\n<th>Тип</th>\n<th>Описание</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code>&#42;</td>\n<td><code>String</code></td>\n<td>Имя cookie.</td>\n</tr>\n<tr>\n<td><code>val</code>&#42;</td>\n<td><code>String</code> &#124; <code>null</code></td>\n<td>Значение cookie. При установке в качестве значения <code>null</code> cookie удаляется.</td>\n</tr>\n<tr>\n<td>[<code>options</code>]</td>\n<td><code>Object</code></td>\n<td>Опции. </br></br> Свойства объекта: </br></br> &#8226; <code>expires</code> (<code>Number</code>) – срок жизни cookie в сутках. При отрицательном значении cookie будет удалено. Альтернативно, можно передать в качестве значения сформированный объект даты (<code>new Date()</code>). </br> &#8226; <code>path</code> (<code>String</code>) – путь от корня домена внутри которого будет доступно cookie. </br> &#8226; <code>domain</code> (<code>String</code>) – домен. По умолчанию текущий домен. </br> &#8226; <code>secure</code> (<code>Boolean</code>) – флаг, указывающий на необходимость использования с cookie шифрованного соединения SSL. По умолчанию <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n</div><p>&#42; Обязательный аргумент.</p>\n<p><strong>Возвращает:</strong> объект <code>this</code>.</p>\n<p>Пример:</p>\n<pre><code class=\"lang-js\">modules.require(&#39;cookie&#39;, function(cookie) {\n\n    cookie.set(&#39;mycookie&#39;, &#39;foobar&#39;, {\n        expires : 1, // срок жизни одни сутки\n        path : &#39;/&#39;, // доступно для всех страниц\n        secure : true // передавать cookie только по SSL\n    });\n\n    console.log(cookie.get(&#39;mycookie&#39;)); // &#39;foobar&#39;\n\n    cookie.set(&#39;mycookie&#39;, null); // удаляем cookie\n    console.log(cookie.get(&#39;mycookie&#39;)); // null\n\n});\n</code></pre>\n"},"en":{"name":"cookie","examples":[],"description":"<h1 id=\"cookie-1\"><a href=\"#cookie-1\" class=\"anchor\"></a>cookie</h1>\n<p>This block provides an object with a set of methods for working with browser cookies (the JS <code>document.cookie</code> property).</p>\n<h2 id=\"overview\"><a href=\"#overview\" class=\"anchor\"></a>Overview</h2>\n<h3 id=\"object-properties-and-methods\"><a href=\"#object-properties-and-methods\" class=\"anchor\"></a>Object properties and methods</h3>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Return type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#fields-get\">get</a>(<code>name</code>)</td>\n<td><code>String</code> &#124; <code>null</code></td>\n<td>Gets the value stored in a browser cookie.</td>\n</tr>\n<tr>\n<td><a href=\"#fields-set\">set</a>(<code>name</code>, <code>val</code>, <code>[options]</code>)</td>\n<td><code>String</code></td>\n<td>Sets the cookie with the specified name.</td>\n</tr>\n</tbody>\n</table>\n</div><h3 id=\"public-block-technologies-1\"><a href=\"#public-block-technologies-1\" class=\"anchor\"></a>Public block technologies</h3>\n<p>The block is implemented in:</p>\n<ul>\n<li><code>js</code></li>\n</ul>\n<h2 id=\"description\"><a href=\"#description\" class=\"anchor\"></a>Description</h2>\n<p><a name=\"fields\"></a></p>\n<h3 id=\"object-properties-and-methods-1\"><a href=\"#object-properties-and-methods-1\" class=\"anchor\"></a>Object properties and methods</h3>\n<p><a name=\"fields-get\"></a></p>\n<h4 id=\"get-method\"><a href=\"#get-method\" class=\"anchor\"></a><code>get</code> method</h4>\n<p>Use this method to get the value stored in a cookie for the name passed in the argument.</p>\n<p><strong>Accepted arguments:</strong></p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code>&#42;</td>\n<td><code>String</code></td>\n<td>The name of the cookie.</td>\n</tr>\n</tbody>\n</table>\n</div><p>&#42; Required argument.</p>\n<p><strong>Returns:</strong></p>\n<ul>\n<li><code>String</code> — If a cookie with the specified name was set. The value is automatically decoded using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent</a>.</li>\n<li><code>null</code> — If a cookie with the specified name doesn&#39;t exist.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"lang-js\">modules.require(&#39;cookie&#39;, function(cookie) {\n\n    cookie.set(&#39;mycookie&#39;, &#39;foobar&#39;);\n    console.log(cookie.get(&#39;mycookie&#39;)); // &#39;foobar&#39;\n    console.log(cookie.get(&#39;foo&#39;)); // null\n\n});\n</code></pre>\n<p><a name=\"fields-set\"></a></p>\n<h4 id=\"set-method\"><a href=\"#set-method\" class=\"anchor\"></a><code>set</code> method</h4>\n<p>Use this method to set the cookie with the specified name. In addition to the name and value, you can pass the method a hash with additional cookie parameters.</p>\n<p><strong>Accepted arguments:</strong></p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code>&#42;</td>\n<td><code>String</code></td>\n<td>The name of the cookie.</td>\n</tr>\n<tr>\n<td><code>val</code>&#42;</td>\n<td><code>String</code> &#124; <code>null</code></td>\n<td>The value of the cookie. If the value is set to <code>null</code>, the cookie is deleted.</td>\n</tr>\n<tr>\n<td>[<code>options</code>]</td>\n<td><code>Object</code></td>\n<td>Options. </br></br> Object properties</br></br> &#8226; <code>expires</code> (<code>Number</code>) – The cookie&#39;s time to live, in days. If the value is negative, the cookie is deleted. Alternatively, you can pass a generated date object (<code>new Date()</code>) for the value. </br> &#8226; <code>path</code> (<code>String</code>) – The path from the domain root where the cookie will be available. </br> &#8226; <code>domain</code> (<code>String</code>) – The domain. By default, this is the current domain. </br> &#8226; <code>secure</code> (<code>Boolean</code>) – Flag indicating that an encrypted SSL connection must be used with the cookie. By default, it is <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n</div><p>&#42; Required argument.</p>\n<p><strong>Returns:</strong> the <code>this</code> object.</p>\n<p>Example:</p>\n<pre><code class=\"lang-js\">modules.require(&#39;cookie&#39;, function(cookie) {\n\n    cookie.set(&#39;mycookie&#39;, &#39;foobar&#39;, {\n        expires : 1, // lifetime is one day\n        path : &#39;/&#39;, // available for all pages secure\n        secure : true // only send the cookie over SSL\n    });\n\n    console.log(cookie.get(&#39;mycookie&#39;)); // &#39;foobar&#39;\n\n    cookie.set(&#39;mycookie&#39;, null); // deleting the cookie\n    console.log(cookie.get(&#39;mycookie&#39;)); // null\n\n});\n</code></pre>\n"}}